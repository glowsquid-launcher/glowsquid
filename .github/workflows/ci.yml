name: CI

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    types: [opened, synchronize]

jobs:
  build-test:
    name: Build + Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: "yarn"

      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: >-
          sudo apt-get update &&
          sudo apt-get install -y
          libgtk-3-dev
          libgtksourceview-3.0-dev
          webkit2gtk-4.0
          libappindicator3-dev
          webkit2gtk-driver
          xvfb

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: yarn

      - name: Install tauri-driver
        uses: actions-rs/cargo@v1
        if: matrix.os != 'macos-latest'
        with:
          command: install
          args: tauri-driver

      - name: Install Wrangler
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: wrangler

      - name: Build
        run: yarn build

      - name: Test (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: xvfb-run yarn test

      # Doesnt work for some reason
      #- name: Test (Windows)
      #if: matrix.os == 'windows-latest'
      #run: yarn test

      #- name: Test (Macos)
      #  if: matrix.os == 'macos-latest'
      # run: yarn test

      - uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          name: linux-build
          path: |
            ./apps/oxidize/target/release/bundle/appimage/glowsquid_*.AppImage
            ./apps/oxidize/target/release/bundle/deb/glowsquid_*.deb
      - uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          name: windows-build
          path: ./apps/oxidize/target/release/bundle/msi/*
      - uses: actions/upload-artifact@v2
        if: matrix.os == 'macos-latest'
        with:
          name: macos-build
          path: |
            ./apps/oxidize/target/release/bundle/macos/Glowsquid.app
            ./apps/oxidize/target/release/bundle/macos/Glowsquid_*.dmg
